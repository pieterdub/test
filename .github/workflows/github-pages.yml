name: Deploy and Verify GitHub Pages

on:
  push:
    branches:
      - main-verify-gh-pages

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  sync-data:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.commit-step.outputs.has_changes }}
    steps:
    - name: Checkout main-verify-gh-pages branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout gh-pages branch
      run: git checkout gh-pages

    - name: Copy required files
      run: |
        rm -rf data
        git checkout main-verify-gh-pages -- data scripts package.json yarn.lock .prettierrc.js
        echo "Unstage all files"
        git reset

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run dapi pricing split script
      run: node scripts/split-dapi-pricing.js

    - name: Commit and push if changes are detected
      id: commit-step
      run: |
        if [ -n "$(git status data --porcelain)" ]; then
          echo "Changes detected in gh-pages branch."
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add data
          git commit -m "Update data file(s)"
          git push

          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "No changes to commit and push."
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
  deploy-gh-pages:
    needs: sync-data
    if: always() && needs.sync-data.outputs.has_changes == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout gh-pages branch
        run: git checkout gh-pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  verify-gh-pages:
    needs: deploy-gh-pages
    if: |
      always() &&
      (needs.deploy-gh-pages.result == 'success' || needs.deploy-gh-pages.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main-verify-gh-pages branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Verifying pages api
      run: |
        echo "Verifying pages deployment"
        node scripts/verify-pages.js ${{ github.repository_owner }} ${{ github.event.repository.name }}