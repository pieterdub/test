name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
    paths: |
      data/*
      scripts/*
  workflow_dispatch:
  

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  sync-pages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout gh-pages branch
      run: git checkout gh-pages

    - name: Sync data folder (overwrite existing files)
      run: |
        rm -rf data
        git checkout main -- data scripts

    - name: Commit and push if changes are detected
      id: commit-step
      run: |
        echo "Changes detected in gh-pages branch."
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add data
        git commit -m "Update data file(s)"
        git push
  deploy-gh-pages:
    needs: sync-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  verify-gh-pages:
    needs: deploy-gh-pages
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Verifying pages api
      run: |
        echo "Verifying pages deployment"
        node scripts/verify-pages.js ${{ secrets.GITHUB_TOKEN }} ${{ github.repository_owner }} ${{ github.repository }}